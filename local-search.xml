<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker</title>
    <link href="/2023/05/19/Dockerfile/"/>
    <url>/2023/05/19/Dockerfile/</url>
    
    <content type="html"><![CDATA[<h2 id="制作自己的镜像"><a href="#制作自己的镜像" class="headerlink" title="制作自己的镜像"></a>制作自己的镜像</h2><h3 id="编写-Dockerfile文件"><a href="#编写-Dockerfile文件" class="headerlink" title="编写 Dockerfile文件"></a>编写 Dockerfile文件</h3><div class="code-wrapper"><pre><code class="hljs dockerfile">$ <span class="hljs-keyword">FROM</span> node:<span class="hljs-number">11</span><span class="hljs-keyword">MAINTAINER</span> easydoc.net<span class="hljs-comment"># 复制代码</span><span class="hljs-keyword">ADD</span><span class="language-bash"> . /app</span><span class="hljs-comment"># 设置容器启动后的默认运行目录</span><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><span class="hljs-comment"># 运行命令，安装依赖</span><span class="hljs-comment"># RUN 命令可以有多个，但是可以用 &amp;&amp; 连接多个命令来减少层级。</span><span class="hljs-comment"># 例如 RUN npm install &amp;&amp; cd /app &amp;&amp; mkdir logs</span><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install --registry=https://registry.npm.taobao.org</span><span class="hljs-comment"># CMD 指令只能一个，是容器启动后执行的命令，算是程序的入口。</span><span class="hljs-comment"># 如果还需要运行其他命令可以用 &amp;&amp; 连接，也可以写成一个shell脚本去执行。</span><span class="hljs-comment"># 例如 CMD cd /app &amp;&amp; ./start.sh</span><span class="hljs-keyword">CMD</span><span class="language-bash"> node app.js</span></code></pre></div><h3 id="Build-为镜像和运行"><a href="#Build-为镜像和运行" class="headerlink" title="Build 为镜像和运行"></a>Build 为镜像和运行</h3><p>编译 </p><div class="code-wrapper"><pre><code class="hljs mipsasm">$ docker <span class="hljs-keyword">build </span>-t test:<span class="hljs-built_in">v1</span> <span class="hljs-comment">#-t 设置镜像名字和版本号</span></code></pre></div><p>命令参考：<a href="https://docs.docker.com/engine/reference/commandline/build/">https://docs.docker.com/engine/reference/commandline/build/</a><br>运行容器</p><div class="code-wrapper"><pre><code class="hljs bash">$ docker run -p 8080:8080 --name test-hello <span class="hljs-built_in">test</span>:v1</code></pre></div><p>-p 映射容器内端口到宿主机<br>–name 容器名字<br>-d 后台运行<br>命令参考文档：<a href="https://docs.docker.com/engine/reference/run/">https://docs.docker.com/engine/reference/run/</a></p><h3 id="更多相关命令"><a href="#更多相关命令" class="headerlink" title="更多相关命令"></a>更多相关命令</h3><div class="code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> docker <span class="hljs-built_in">ps</span> <span class="hljs-comment">#查看当前运行中的容器</span>docker images <span class="hljs-comment">#查看镜像列表</span>docker <span class="hljs-built_in">rm</span> container<span class="hljs-literal">-id</span> <span class="hljs-comment">#删除指定 id 的容器</span>docker stop/<span class="hljs-built_in">start</span> container<span class="hljs-literal">-id</span> <span class="hljs-comment">#停止/启动指定 id 的容器</span>docker rmi image<span class="hljs-literal">-id</span> <span class="hljs-comment">#删除指定 id 的镜像</span>docker volume <span class="hljs-built_in">ls</span> <span class="hljs-comment">#查看 volume 列表</span>docker network <span class="hljs-built_in">ls</span> <span class="hljs-comment">#查看网络列表</span></code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
